{"id":"task-1","date":"2025-05-12","level":"easy","description":"1) create 'global.style.tsx' file, export GlobalStyle (created by styled-components) to set the global style for this App; 2) the global style should set the body's padding and margin to 0; 3) import GlobalStyle into App.tsx"}
{"id":"task-2","date":"2025-05-12","level":"easy","description":"1) Create components/Header.tsx fixed on the top of the page, with 'Hello Blog' as its text. 2) Create components/Footer.tsx fixed on the bottom of the page 3) Create components/Main.tsx which occupies the remaining space, with 'Welcome to Blog System' as its text 4) Add className 'site-header' to Header, 'site-footer' to Footer, 'site-main' to Main. 5) Import and render Header, Main, Footer in App.tsx 6) Constraint: use styled-components to set appealing style for Header„ÄÅFooter"}
{"id":"task-3","date":"2025-05-12","level":"easy","description":"1) Create components/Button.tsx, export default ONLY a styled.button component with props '$type' 2) when $type of Button is 'primary', background becomes #0064fa, 'secondary' becomes #0095ee, 'danger' becomes #d52515 3) Render Three Buttons in the RIGHT of Header: 'primary' Button with text 'Add Blog', 'secondary' Button with text 'Read Blogs', 'danger' Button with text 'Theme'  4) Constraint: use styled-components to set the appealing style"}
{"id":"task-4","date":"2025-05-12","level":"easy","description":"1) When Button Hovered, opacity of Button switched to 0.7; 2) When Button Focused, the size enlarged by 120% 3) Constraint: use styled-components to set the appealing style"}
{"id":"task-5","date":"2025-05-12","level":"easy","description":"1) Render A secondary Button with text 'My Friends' in Footer 2) Only if when Button displayed in Footer, the backgroundColor of text becomes transparent, and the color the text in Button is #0095ee 4) Constraint: use styled-components to set the appealing style"}
{"id":"task-6","date":"2025-05-12","level":"moderate","description":"1) Create three pages: components/AddBlog.tsx (with h1 'Add Blog'), components/ReadBlogs.tsx (with h1 'Read Blogs'), components/ThemePage.tsx (with h1 'Theme') 2) Render pages in Main.tsx, only one page is visible to User at one time 3) When click 'Add Blog', switch to show AddBlog.tsx, when click 'Read Blogs', switch to show ReadBlogs.tsx, when click 'Theme', switch to show ThemePage.tsx 4) When No Button in Header Clicked, shows 'Welcome to Blog System' by default 5) Constraint: use styled-components to set the appealing style"}
{"id":"task-7","date":"2025-05-12","level":"moderate","description":"1) When page in Main.tsx switched, switch pages by animations in 1s: new page moved from the right side of viewport to show it 2) Create keyframes (import from 'styled-components') and PageContainer (styled.div with classname .page-container) in Main.tsx to implement this feature 3) Constraint: use styled-components to set the appealing style&animation"}
{"id":"task-8","date":"2025-05-12","level":"moderate","description":" 3) create context/BlogContext.tsx to manage blog list data 2) The initial Blog List Data is [{title: 'Morning', content: 'Morning My Friends'}, {title: 'Travel', content: 'I love traveling!'}] 3) In ReadBlogs.tsx, render titles of blogs in div elements (.list-item) 4) Constraint: use styled-components to set the appealing style"}
{"id":"task-9","date":"2025-05-12","level":"moderate","description":"1) Make .list-item clickable, when clicked, switch to show the content of the blog in a div element (.blog-content) 2) .blog-content is placed in the right of Blog List. 3) When Blog Content Changed, shows animation for .blog-content: switch content opacity from 0 to 1 in 1s 4) Constraint: use styled-components to set the appealing style&animation"}
{"id":"task-10","date":"2025-05-12","level":"moderate","description":"1) create components/BlogForm.tsx, which consists of input(with placeholder 'Title'), textarea(with placeholder 'Content') a submit button (.submit-btn) 2) Add a BlogForm.tsx to AddBlog.tsx 3) when Form in AddBlog submitted, submit the Blog and switch to ReadBlogs Page, select the Blog just submitted 4) Constraint: use styled-components to set the appealing style&animation"}
{"id":"task-11","date":"2025-05-12","level":"challenging","description":"1) When Submit Blog clicked, add new animation to .blog-content in ReadBlogs.tsx: fade in from the bottom side of viewport 2) The animation of .blog-content will not change when .list-item in ReadBlogs.tsx clicked 3) Constraint: use styled-components to set the appealing style&animation"}
{"id":"task-12","date":"2025-05-12","level":"challenging","description":"1) Create components/Markdown.tsx, support Markdown Parse and render for blog content in ReadBlogs.tsx 2) Use styled-components to set the text color of elements in Markdown: h1 #000000, h2 #333333, h3 #666666, h4 #999999 3) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed."}
{"id":"task-13","date":"2025-05-12","level":"challenging","description":"1) Create components/Tooltip.tsx that displays a tooltip (.tooltip) at the bottom of the child component when hovered over. 2) The Tooltip should be appended to document.body. 3) Shows Tooltip with text 'ü™Ñ' when hovered on 'Add Blog' Button; Shows Tooltip with text 'üçâ' when hovered on 'Read Blogs' Button; Shows Tooltip with text 'üé®' when hovered on 'Theme' Button; 4) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation."}
{"id":"task-14","date":"2025-05-12","level":"challenging","description":"1) Create components/Modal.tsx that display a modal (.modal) appended to document.body. 2) Modal accepts title(JSX.Element) and content(JSX.Element) as its props 3) The overlay of Modal (.modal-overlay) has opacity 0.3 and backgroundColor #999999  4) The Modal should have a close button (.close-btn) 5) Add a Preview Button(.preview-btn) in BlogForm.tsx, when clicked, toggle a Modal with title ('Preview Blog Markdown') to shows the Markdown-Parsed Blog Content, Markdown style are same as the style of Blog Content in ReadBlogs.tsx 6) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation"}
{"id":"task-15","date":"2025-05-12","level":"challenging","description":"1) Create utils/toast.tsx to display a one-line message (fontSize: 12px) in a appealing green box (.toast) at the top of the page for 2000ms. 2) Display 'New Blog Created Successfully!' when a new blog is submitted. 3) If a toast is already visible when another is triggered, remove the old toast before showing the new one. 4) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation"}
{"id":"task-16","date":"2025-05-12","level":"challenging","description":"1) When hovered in 'My Friends' Button in Footer, shows Tooltip with text 'üê∂üê±üê≠üêπüê∞ü¶äüêªüêº' in the TOP of 'My Friends' 2) Custom style of Tooltip by using 'styled(Tooltip)' in Footer.tsx, the fontSize of text in this Tooltip is 50px 3) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation" }
{"id":"task-17","date":"2025-05-12","level":"challenging","description":"1) When clicked in 'My Friends' Button in Footer, shows Modal with title ('My Friends') 2) Shows Animals üê∂üê±üê≠üêπüê∞ü¶äüêªüêº in the content of Modal, every animal is wrapped in .animal, and every animal has a infinite animation: rotate from -45deg to 45deg in 1s, and rotate back from 45deg to -45deg in 1s 3) Custom style of this Modal by using 'styled(Modal)' in Footer.tsx, the overlay Background Color of Modal is customized to #FF69B4 4) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation"}
{"id":"task-18","date":"2025-05-12","level":"challenging","description":"1) create context/ThemeContent.tsx by using styled's ThemeProvider to manage the theme configuration. 2) In Theme Page, add input(.header-background) with label 'Header Background' which will represent the background color of Header, and add input(.footer-background) with label 'Footer Background' which will represent the background color of Footer 4) When the input value in Theme Page changed, the theme configuration updated instantly 5) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation "}
{"id":"task-19","date":"2025-05-12","level":"challenging","description":"1) In Theme Page, add input(.markdown-h1) with label 'Markdown H1' which will represent the text color of Markdown H1, add input(.markdown-h2) with label 'Markdown H2' which will represent the text color of Markdown H2, add input(.markdown-h3) with label 'Markdown H3' which will represent the text color of Markdown H3, add input(.markdown-h4) with label 'Markdown H4' which will represent the text color of Markdown H4 2) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation"}
{"id":"task-20","date":"2025-05-12","level":"challenging","description":"1) In Theme Page, add input(.button-primary) with label 'Button Primary' which will represent the background color of Button Primary, add input(.button-secondary) with label 'Button Secondary' which will represent the background color of Button Secondary, add input(.button-danger) with label 'Button Danger' which will represent the background color of Button Danger 2) In Theme Page, add input(.toast-background) with label 'Toast Background' which will represent the background color of Toast 3) Constraint: DO NOT use any third-party packages; ONLY React and styled-components are allowed. use styled-components to set the appealing style&animation"}