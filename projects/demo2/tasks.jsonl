{"id":"task-1","date":"2025-5-29","level":"easy","description":"Create a login form interface with proper input fields and buttons. Add two input elements inside .root: a text input with id 'user' and placeholder 'User' for username entry, and a password input with id 'password' and placeholder 'Password' for secure password entry. Include two button elements: one with id 'login' containing text 'Login', and another with id 'reset' containing text 'Reset'. Add basic CSS styling to ensure input fields have 5px bottom margin for proper spacing. Use <br /> tags after each input for layout structure."}
{"id":"task-2","date":"2025-5-29","level":"easy","description":"Implement reset functionality to clear form fields when the Reset button is clicked. Add a click event listener to #reset that sets both #user and #password input values to empty strings, effectively clearing any text the user has entered. This should work regardless of the current content length or type of characters in the fields, and should handle multiple reset clicks without errors."}
{"id":"task-3","date":"2025-5-29","level":"easy","description":"Add login validation logic with appropriate user feedback through alerts. Implement a click event listener on #login that retrieves values from #user and #password inputs, then validates them in sequence: first check if username is empty and show 'Invalid user' alert, then check if password is empty and show 'Invalid password' alert, otherwise show 'Login successfully' alert. The validation should prioritize username checking over password checking when both fields are empty."}