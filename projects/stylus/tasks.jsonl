{"id":"init","date":"2024-12-16","level":"easy","description":"Generate 2 pages with HTML/Stylus/JS (ES module) files. 'design.js' and 'common.styl' are used by 'design.html' containing an empty form. 'preview.js' and 'common.styl' are used by 'preview.html' containing a form (action 'submit') with a submit button. Do not add more elements to the forms."}
{"id":"task-1","date":"2024-12-16","level":"easy","description":"JS class Question constructor params are: title (string), name (string), preview (boolean, default false), and has a member 'root'. 'Question.root' is a fieldset (class 'q', id is param 'name',) containing a title legend (class 'q-title') and a body container (class 'q-body'). Save codes as es-module file 'common/Question.js'. Add a button 'Add Question' (class 'add-question') in 'design.js', and click it to create a Question (random title and unique name) whose root is prepended to the form. Save styles to 'common/Question.styl' imported by 'common.styl'."}
{"id":"task-2","date":"2024-12-16","level":"easy","description":"In design page, a Question title is clicked to edit (contenteditable=true) in place. In preview page, title can not be edited. Append 'Question.root' with a config panel (class 'q-config') containing a button (class 'q-remove') clicked to remove the question from the form. Config panel should be hidden in preview page. Extract all colors to stylus nested variable '$color', all padding/margin value to stylus variables (using computed value) and all border properties to mixins. Use stylus functions to handle similar colors, e.g. lighter or darker colors. Save these variables and mixins to 'common/config.styl' which should be imported by 'common.styl'."}
{"id":"task-3","date":"2024-12-16","level":"easy","description":"Class SurveyDesign constructor params are: formSelector (string), title (string). Method 'prependQuestion(question)' and 'appendQuestion(question)' are used to prepend/append a 'question.root' to the form (got by param 'formSelector'). Save codes to 'common/SurveyDesign.js' imported by 'design.js'. Move '.add-question' button codes to 'common/SurveyDesign.js' which should import './Question.js'. Save styles to 'common/SurveyDesign.styl' imported by 'common.styl'."}
{"id":"task-4","date":"2024-12-16","level":"easy","description":"Add 'Save' button (class 'save') and 'Preview' button (class 'preview') in 'common/SurveyDesign.js'. Click 'Save' button to save Survey data to 'localStorage.data'. Survey data format is like `{title:'survey title', questions:[{className:'Question', title:'title 1', name:'question1'}, {className:'Question', title:'title2', name:'question2'}]}`. Each type of question's JSON data should contain all properties from constructor params and configs. Click 'Preview' button to save Survey data and open preview page in new window. Save codes to 'common/SurveyDesign.js'."}
{"id":"task-5","date":"2024-12-16","level":"easy","description":"Class SurveyPreview (file 'common/SurveyPreview.js', used by 'preview.js') constructor params are: formSelector (string), title (string). Method 'prependQuestion(question)' and 'appendQuestion(question)' are used to prepend/append a 'question.root' to the form (got by param 'formSelector'). Create a SurveyPreview instance with data parsed from 'localStorage.data' and all questions should use preview mode in which config panel should be hidden and question can not be editable. Save styles to 'common/SurveyPreview.styl' imported by 'common.styl'."}
{"id":"task-6","date":"2024-12-17","level":"moderate","description":"Class SingleSelectionQuestion (file 'common/SingleSelectionQuestion.js') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), options (string array). Use radio as selection control whose value is the options index. Options are rendered in '.q-body'. Add a button (class 'add-single') in 'common/SurveyDesign.js', and click it to create a SingleSelectionQuestion (random title, unique name, 3 random options) whose root is prepended to the form. Click config panel button (class 'add-option') to add an option. In design page each option row (class 'option') in '.q-body', user can click button (class 'remove-option') to remove an option, click option text (class 'option-text') to edit it (contenteditable=true) in place. Save styles to 'common/SingleSelectionQuestion.styl' imported by 'common.styl'."}
{"id":"task-7","date":"2024-12-17","level":"moderate","description":"Class MultiSelectionQuestion (file 'common/MultiSelectionQuestion.js', 'common/MultiSelectionQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), options (string array). Use checkbox as selection control whose value is the options index.  Options are rendered in '.q-body'. Add a button (class 'add-multi') in 'common/SurveyDesign.js', and click it to create a MultiSelectionQuestion (random title, unique name, 3 random options) whose root is prepended to the form. Click config panel button (class 'add-option') to add an option. In design page each option row (class 'option') in '.q-body', user can click button (class 'remove-option') to remove an option, click option text (class 'option-text') to edit it in place."}
{"id":"task-8","date":"2024-12-17","level":"moderate","description":"Class OpenQuestion (file 'common/OpenQuestion.js', 'common/OpenQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), isMultilines (boolean). When isMultilines is false question value does not contain any line break character. Add a button (class 'add-open') in 'common/SurveyDesign.js', and click it to create an OpenQuestion (random title, unique name) whose root is prepended to the form. Add a checkbox (class 'q-multilines') associated with 'OpenQuestion.isMultilines' to the config panel."}
{"id":"task-9","date":"2024-12-18","level":"moderate","description":"Class RatingQuestion (file 'common/RatingQuestion.js', 'common/RatingQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), starCount (number, default 5). Add a button (class 'add-rating') in 'common/SurveyDesign.js', and click it to create a RatingQuestion (random title, unique name) whose root is prepended to the form. Add a config panel checkbox (class 'q-starCount') associated with 'RatingQuestion.starCount'. Highlight star options (class 'option') up to the clicked star option, and get the rating value (stored in param-named control) from 0 to 1."}
{"id":"task-10","date":"2024-12-18","level":"moderate","description":"Class RankingQuestion (file 'common/RankingQuestion.js', 'common/RankingQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), options (string array). Add a button (class 'add-ranking') in 'common/SurveyDesign.js', and click it to create a RankingQuestion (random title, unique name and 3 random options) whose root is prepended to the form. Click config panel button (class 'add-option') to add an option. In design page, each option row (class 'option'), user can click button (class 'remove-option') to remove an option, click option text (class 'option-text') to edit it in place. In preview page, insert after the target option (class 'option') when dragging the source option to drop into the target one; Store comma separated option indices in param-named control."}
{"id":"task-11","date":"2024-12-18","level":"moderate","description":"Class NpsQuestion (file 'common/NpsQuestion.js', 'common/NpsQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean). Add a button (class 'add-nps') in 'common/SurveyDesign.js', and click it to create a NpsQuestion (random title, unique name) whose root is prepended the form. In preview page, highlight the clicked score option (class 'option'), and store score (0-10) in param-named control."}
{"id":"task-12","date":"2024-12-18","level":"challenging","description":"Class LikertQuestion (file 'common/LikertQuestion.js', 'common/LikertQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), options (string array), statements (string array). LikertQuestion is a table whose each row represents a statement (single selection), and each column is a radio option. Store each statement selection value in the control whose name is like {param-name}_{statement-index}. Add a button (class 'add-likert') in 'common/SurveyDesign.js', and click it to create a LikertQuestion (random title, unique name, 5 random options, 3 statements) whose root is prepended to the form."}
{"id":"task-13","date":"2024-12-18","level":"challenging","description":"Click config panel button (class 'add-statement') to add an statement row. In design page each statement row (class 'statement'), user can click button (class 'remove-statement') to remove an statement row, click statement text (class 'statement-text') to edit it in place. In design page each option cell (class 'option'), user can click button (class 'add-option') to add an option column, click button (class 'remove-option') to remove an option column, click option text (class 'option-text') to edit it in place."}
{"id":"task-14","date":"2024-12-18","level":"challenging","description":"Add questions contents (class 'contents', file 'common/Contents.js' used by 'common/SurveyDesign.js' and 'common/SurveyPreview.js') panel fixed at the right side of the page. Contents can not cover any question content. Each contents item (class 'contents-item') has the text from the associated question's title. Click each contents item to scroll page to the associated question. Update contents after questions updated in the form. Insert after the target contents item when dragging the source one into the target one; Change the position of associated questions at the same time. Save styles to 'common/Content.styl' imported by 'common.styl'."}
{"id":"task-15","date":"2024-12-18","level":"challenging","description":"Add a config panel checkbox (class 'q-required') associated with Question.required (boolean, default false). Preview page form can not be submitted when any required question has no/empty value. Give priority to implement 'required' feature using each Question's form controls 'required' attribute. Implement 'required' feature for SingleSelectionQuestion, NpsQuestion, LikertQuestion, RatingQuestion."}
{"id":"task-16","date":"2024-12-18","level":"moderate","description":"Add a config panel checkbox (class 'q-minLength') associated with 'OpenQuestion.minLength' (number, default 0). A required OpenQuestion's answer length should be greater than 0. OpenQuestion's answer length should be equal or greater than minLength."}
{"id":"task-17","date":"2024-12-18","level":"moderate","description":"A required MultiSelectionQuestion should contain at least one checked option. If not valid, use alert dialog to display information and prevent form submitting."}
{"id":"task-18","date":"2024-12-19","level":"challenging","description":"Class DataQuestion (file 'common/DataQuestion.js', 'common/DataQuestion.styl') inherits from Question. Its constructor params are: title (string), name (string), preview (boolean), type (one of url/tel/email/date/number, as input element type). Add a button (class 'add-data') in 'common/SurveyDesign.js', and click it to create a DataQuestion (random title, unique name, random type) whose root is prepended to the form. Add a config panel select (class 'q-type', options url/tel/email/date/number) associated with 'DataQuestion.type'."}
{"id":"task-19","date":"2024-12-19","level":"challenging","description":"Add a config checkbox 'Shuffle' (class 'q-shuffle') and 'isShuffleMode' property for SingleSelectionQuestion, MultiSelectionQuestion, RankingQuestion. Shuffle options if needed in preview page."}
{"id":"task-20","date":"2024-12-19","level":"challenging","description":"Add button 'Add' (class 'add') in each question config panel. Click '.add' button to display the popup panel whose buttons are clicked to insert a new question after the current one. The popup panel (class 'popup') contains all buttons clicked to add different type of question to the form. Click page to close the popup panel."}