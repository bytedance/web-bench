{"id":"task-1","date":"2025-5-29","level":"easy","description":"Create the basic HTML structure for the drawing application. Add a toolkit div with class 'toolkit' and an SVG element with class 'canvas' inside the root div. The SVG should have version='1.1' and xmlns='http://www.w3.org/2000/svg' attributes."}
{"id":"task-2","date":"2025-5-29","level":"easy","description":"Add shape selection tools to the toolkit. Create a div with class 'shape' containing three label elements with classes 'line', 'rect', and 'ellipse'. Each label should have a title attribute matching its class name (capitalized) and contain a radio input with name='operation' and value matching the shape type."}
{"id":"task-3","date":"2025-5-29","level":"easy","description":"Add property controls to the toolkit. Create a div with class 'prop' containing a range input with class 'line-width' (value=9, max=21, min=1, step=4) and a color input with class 'color' (value='#000000')."}
{"id":"task-4","date":"2025-5-29","level":"medium","description":"Add operation tools to the toolkit. Create a div with class 'operation' containing six label elements with classes 'move', 'rotate', 'zoom', 'copy', 'delete', and 'fill'. Each label should have a title attribute matching its class name (capitalized) and contain a radio input with name='operation' and value matching the operation type."}
{"id":"task-5","date":"2025-5-29","level":"easy","description":"Style the root container to use flexbox layout. Make it full viewport size (100vw x 100vh) with flex-direction column and overflow hidden. The body should have no margin."}
{"id":"task-6","date":"2025-5-29","level":"medium","description":"Style the toolkit with flexbox layout. It should have justify-content: space-between, align-items: center, and padding: 4px. The shape and operation divs inside should use flexbox with 8px gap between items."}
{"id":"task-7","date":"2025-5-29","level":"medium","description":"Style the toolkit labels and inputs. Radio inputs should be hidden (appearance: none, width/height: 0). Labels should be 32x32px squares with centered content, hover effect (rgba(0,0,0,0.1) background), and selected state (rgba(0,0,0,0.2) background when input is checked)."}
{"id":"task-8","date":"2025-5-29","level":"easy","description":"Style the canvas element to flex: 1 and have a light gray background color (#eee)."}
{"id":"task-9","date":"2025-5-29","level":"hard","description":"Create the EventEmitter utility class with methods: on(event, callback), emit(event, ...args), once(event, callback), off(event, callback), listenerCount(event), and rawListeners(event). This will be used as a base class for Canvas and Toolkit."}
{"id":"task-10","date":"2025-5-29","level":"hard","description":"Create the Toolkit class that extends EventEmitter. It should find the toolkit element by selector, bind change events to all operation radio inputs, emit 'operation-change' events, and provide getters for operation, lineWidth, and color values."}
{"id":"task-11","date":"2025-5-29","level":"hard","description":"Implement spacebar functionality in the Toolkit class. When spacebar is pressed, temporarily switch to the move tool. When released, return to the previous tool. Track the pressing state and previous label to handle this correctly."}
{"id":"task-12","date":"2025-5-29","level":"hard","description":"Create the base Shape class with static methods for registration and finding shapes by element. Include properties for element and center point, and methods for onMove, onRotate, onZoom, clone, and remove. Static create method should dynamically import and instantiate shape subclasses."}
{"id":"task-13","date":"2025-5-29","level":"hard","description":"Create the Canvas class that extends EventEmitter. It should handle mouse/touch events for drawing operations. On mousedown/touchstart, determine the operation and create shapes or select existing ones. Track cursor position and initial transform state."}
{"id":"task-14","date":"2025-5-29","level":"hard","description":"Implement Canvas drag functionality. On mousemove/touchmove, update shapes based on the current operation: for shape creation, call onCreateMove; for move/rotate/zoom operations, call the corresponding shape methods with cursor positions and transforms."}
{"id":"task-15","date":"2025-5-29","level":"hard","description":"Implement Canvas operation handling for copy, delete, and fill. Copy should clone the selected shape with a 20px offset. Delete should remove the shape from the canvas. Fill should set the fill attribute to the current color."}
{"id":"task-16","date":"2025-5-29","level":"hard","description":"Create the Line shape class extending Shape. Constructor should create an SVG line element with stroke color and width. Implement onCreateMove to update the line endpoints based on cursor position, maintaining minimum length equal to line width."}
{"id":"task-17","date":"2025-5-29","level":"hard","description":"Create the Rect shape class extending Shape. Constructor should create an SVG rect element with white fill, stroke color and width. Implement onCreateMove to update rectangle dimensions based on cursor positions, maintaining minimum size equal to line width."}
{"id":"task-18","date":"2025-5-29","level":"hard","description":"Create the Ellipse shape class extending Shape. Constructor should create an SVG ellipse element with white fill, stroke color and width. Implement onCreateMove to update ellipse radii based on cursor positions, maintaining minimum radius equal to half the line width."}
{"id":"task-19","date":"2025-5-29","level":"medium","description":"Add SVG icon backgrounds to toolkit labels using CSS. Each label should have a background-image with an inline SVG data URI representing its function (line, rect, ellipse, move, rotate, zoom, copy, delete, fill icons)."}
{"id":"task-20","date":"2025-5-29","level":"hard","description":"Initialize the application on DOMContentLoaded. Create Toolkit and Canvas instances, and set up the 'done' event listener to automatically switch to move tool after drawing shapes or copying. The whitelist should include 'copy' and all registered shape types."}
